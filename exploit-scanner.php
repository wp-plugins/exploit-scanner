<?php
/*
Plugin Name: WordPress Exploit Scanner
Plugin URI: http://ocaoimh.ie/exploit-scanner/
Description: Scans your WordPress site for possible exploits.
Version: 0.5
Author: Donncha O Caoimh
Author URI: http://ocaoimh.ie/
*/

add_action('admin_menu', 'exploitscanner_menu');

function exploitscanner_menu() {
	add_submenu_page('index.php', 'Exploit Scanner', 'Exploit Scanner', 'manage_options', 'exploit-admin-page', 'exploit_admin_page');
}

function exploit_admin_page() { 
	global $wp_version; ?>
	<div class="wrap">
		<h2>Exploit Scanner</h2>
		<p>This script searches through your WordPress install for signs that may indicate that your website has been compromised by hackers. It does <strong>NOT</strong> remove anything, this is left for the user to do.</p>
		<?php
		if ( isset( $_GET['scan'] ) && $_GET['scan'] == 'all' ) {
			check_admin_referer( 'exploitscanner-scan_all' );
			exploitscanner_file_search();
			exploitscanner_db_search();
		} elseif ( isset( $_GET['customscan'] ) ) {
			check_admin_referer( 'exploitscanner-scan_customstrings' );
			$strings = explode( ',', $_GET['customscan'] );
			exploitscanner_file_search( array_flip( $strings ) );
		}
		
		$scan_url = '?page=exploit-admin-page&scan=all';
		$scan_action = 'exploitscanner-scan_all';
		$scan_link = wp_nonce_url( $scan_url, $scan_action );
		echo "<p style='text-align:center;'><a href='$scan_link' class='exploit-scan-button button-primary'>Run the Scan</a></p>";
		?>
		<div style='margin-top: 20px; text-align:center'>
		<p>Or search the files on your site for a custom string:</p>
		<form method="get">
			<input type="hidden" name="page" value="exploit-admin-page" />
			<input type="text" name="customscan" class="regular-text code" />
			<?php wp_nonce_field( 'exploitscanner-scan_customstrings' ); ?>
			<input type="submit" class="button exploit-scan-button" value="Search Files" />
		</form>
		</div>
		<script type="text/javascript">
			jQuery(document).ready(function($){
				$('.exploit-scan-button').click( function() {
					$('#loader').show();
				});
			}); 
		</script>
		<div id="loader" style="display:none; margin: 10px; padding: 10px; border: 1px solid #333; margin-top: 30px; text-align: center">
			<p><strong>Searching your filesystem and database for hidden links, malicious JavaScript and other possible exploit code</strong><br /><br />Please wait while loading...</p>
			<img src="<?php echo WP_PLUGIN_URL; ?>/exploit-scanner/loader.gif" height="16px" width="16px" alt="loading-icon" />
		</div>
		<h4>DISCLAIMER</h4>
		<p>Unfortunately it's impossible to catch every hack, and it's also too easy to catch "false positives" or things that aren't hacks. If you have been hacked, this script may help you track down what files, comments or posts have been modified. On the other hand, if this script indicates your blog is clean, don't believe it. This is far from foolproof. </p>
		
		<h5>For the paranoid...</h5>
		<p>To prevent someone hiding malicious code inside this plugin and to check that the signatures file (hashes.txt) hasn't been changed, here are the MD5 hashes of these files. Compare them with the references on the plugin homepage. If they match, this file is ok. You'll get extra points if you check this file has the actual md5_file() calls.</p>
		<p style="text-align: center">MD5 of exploit-scanner.php: <code><?php echo md5_file(__FILE__); ?></code></p>
		<p style="text-align: center">MD5 of hashes-<?php echo $wp_version; ?>.php: <code><?php echo md5_file(dirname(__FILE__) . '/hashes-' . $wp_version . '.php'); ?></code></p>
	</div>
<?php }

function exploitscanner_scan( $directory, &$text, &$filehashes ) {
	global $suspicious_files, $modified_core_files;
	
	set_time_limit( 60 );
	if(is_dir($directory)) {
		$directory = rtrim($directory, '/').'/';
		$entries = glob($directory. '*');
		if( is_array( $entries ) && !empty( $entries ) ) foreach ($entries as $entry) {
			if ($entry != '.' && $entry != '..') {
				if( !is_dir( $entry ) ) {
					$filename = str_replace( ABSPATH, '', $entry );
					$md5 = md5_file( $entry );
					$contents = file_get_contents( $entry );
					reset( $text );
					foreach( $text as $exploit ) {
						if( $exploit == '' )
							continue;
						if( strpos( $contents, $exploit ) !== false ) {
							if( !isset( $filehashes[$filename] ) && $filename != 'wp-content/plugins/exploit-scanner/exploit-scanner.php' || ( isset( $filehashes[$filename] ) && $md5 != $filehashes[$filename] ) ) {
								$suspicious_files[$exploit][] = $entry;
							}
						}
					}
					if( isset( $filehashes[$filename] ) && $md5 != $filehashes[$filename] ) {
						$modified_core_files[] = $entry;
					}				
				} else {
					exploitscanner_scan( $entry, $text, $filehashes );
				}
			}
		}
	}
}

function exploitscanner_file_search( $suspicious_text = '' ) {
	global $wp_version, $suspicious_files, $modified_core_files;

	if ( (int) @ini_get('memory_limit') < 128 )
		@ini_set( 'memory_limit', '128M' ); // increase the memory limit if possible, to avoid out of memory errors
	
	if ( $suspicious_text == '' ) {
		$suspicious_text = array( 
			'<iframe' => 'iframes can sometimes be used by hackers to load their own adverts and code on your site.', 
			'visibility:hidden' => 'CSS styling used to hide parts of a web page (can be used legitimately)', 
			'display:none' => 'CSS styling used to hide parts of a web page (is often used legitimately, be concerned if it\'s used to hide a link)',
			'display: none' => 'CSS styling used to hide parts of a web page (is often used legitimately, be concerned if it\'s used to hide a link)',
			'ShellBOT' => 'This may be a script used by hackers to get control of your server.', 
			'uname -a' => 'Tells a hacker what operating system your server is running', 
			'shell_exec' => 'Executes a server command like ls, cd, wget, etc. This may be a script used by hackers.', 
			'YW55cmVzdWx0cy5uZXQ=' => 'Base64 encoded text found in PHP code that redirects visitors from Google.', 
			'eval(' => 'Could be JavaScript code used to hide code inserted by a hacker.', 
			'String.fromCharCode' => 'JavaScript code used to hide suspicious code, but can also be legitimate code.', 
			'$_COOKIE["yahg"]' => "YAHG Googlerank.info exploit code. See <a href='http://creativebriefing.com/wordpress-hacked-googlerankinfo/'>here</a> for further info.",
			'base64_decode' => 'Often used by malicous scripts to decode previously encoded data, such as malicious URLs'
		);
	}

	unset( $filehashes );
	$hashes = dirname(__FILE__) . '/hashes-'. $wp_version .'.php';
	if ( file_exists( $hashes ) ) {
		include_once( $hashes );
	} else {
		$modified_core_files[] = 'The file containing the checksums of all the core WordPress files appears to be missing. Either you have upgraded WordPress and this plugin hasn\'t been updated with the new hashes or the file has been deleted/renamed. You will find that a lot more files have been returned in the Suspicious Strings section.';
	}
	
	exploitscanner_scan( ABSPATH, array_keys( $suspicious_text ), $filehashes );
	echo '<h3>Modified Core Files</h3>';
	if (!empty($modified_core_files)) {
		echo '<ol>';
		foreach ($modified_core_files as $file) {
			echo "<li>$file</li>";
		}
		echo '</ol>';
	} else {
		echo 'Hooray! None of your core WordPress files have been modified.';
	}
	
	if( !empty( $suspicious_files ) ) {
		echo '<h3>Suspicious Strings</h3>';
		foreach ( $suspicious_files as $exploit => $files ) {
			echo '<h4>' . wp_specialchars( $exploit ) . '<br /><em>' . $suspicious_text[$exploit] . '</em></h4><p>Found in the following file(s):</p><ol>';
			foreach ( $files as $file ) {
				$contents = file_get_contents( $file );
				echo '<li>' . wp_specialchars( $file ) . ' <blockquote style="border: 1px solid #333; background: #eee; overflow-x: scroll;">';
				hilight_text( $contents, $exploit );
				echo '</blockquote></li>';
			}
			?></ol><?php
		}
		?>
		
	<?php } else { ?>
		<h3>Suspicious Strings</h3>
		<p>Hooray! No suspicious strings have been found in any of your files.</p>
	<?php }
}

function hilight_text( $contents, $text ) {
	while( $contents ) {
		$start = strpos( $contents, $text ) - 50;
		if ( $start < 0 )
			$start = 0;
		$contents = substr( $contents, $start );
		echo '<p style="margin-left: 1em;"><code>' . nl2br( str_replace( wp_specialchars( $text ), '<span style="background: #ff0">' . wp_specialchars( $text ) . '</span>', wp_specialchars( substr( $contents, 0, 300 ) ) ) ) . '</code></p>';
		$contents = substr( $contents, strpos( $contents, $text ) + strlen( $text ) );
		if( strpos( $contents, $text ) === false ) {
			$contents = false;
		} else {
			echo '<hr />';
		}
	}
}

function exploitscanner_db_search() {
	global $wpdb;
	
	// Suspicious Plugins
	$active_plugins = get_option( 'active_plugins' );
	if ( is_array( $active_plugins ) && !empty( $active_plugins ) ) {
		$suspect_plugins = array();
		foreach ( $active_plugins as $plugin ) {
			if ( strpos( $plugin, '..' ) !== false || substr( $plugin, -4 ) != '.php' ) {
				$suspect_plugins[] = $plugin;
			}
		}
		if ( !empty( $suspect_plugins ) ) {
			?><h3>Suspicious Plugins</h3>
				<p>These plugin files look suspect. Please verify they are files you uploaded.</p><?php
				reset( $suspect_plugins );
			echo '<ol>';
			foreach ( $suspect_plugins as $plugin ) {
				if ( $plugin == '' )
					$plugin = 'Blank entry found. Should be removed. It will look like \'i:0;s:0:\"\";\' in the active_records field.';
				echo  '<li>$plugin</li>';
			}
			echo '</ol>';
		} else {
			?><h3>Suspicious Plugins</h3>
			<p>Hooray! No suspicious plugins found in the <code>active_plugins</code> database record.</p><?php
		}
	}
	
	// Suspcicious text in posts and comments
	$suspect_posts = array();
	$suspect_comments = array();
	$suspect_options = array();
	$suspect_usermeta = array();
	$suspect_post_text = array( 'ekibastos', 'visibility:hidden', 'visibility: hidden', '<iframe', 'display:none', 'display: none' );
	$suspect_options_text = array('eval(', 'script language="JavaScript"');

	foreach ( $suspect_options_text as $exploit_text ) {
		$options = $wpdb->get_results( "SELECT * FROM {$wpdb->options} WHERE option_value LIKE '%{$exploit_text}%'" );
		if ( $options )
			$suspect_options[$exploit_text] = $options;
	}
	unset($options);
	if ( !empty( $suspect_options ) ) { ?>
		<h3>Suspicious Settings</h3>
		<p>Some settings on your blog contain suspicious text that may have been placed there by hackers.</p><ul><?php
		foreach ( $suspect_options as $exploit => $options ) {
			foreach ( $options as $option ) {
				echo "<li>" . esc_html($option->option_name) . "<br /><blockquote style='border: 1px solid #333; background: #eee;'>";
				hilight_text( $option->option_value, $exploit );
				echo "</blockquote></li>";
			}
		}
	} else { ?>
		<h3>Suspicious Settings</h3>
		<p>Hooray! No suspicious text was found in any of your settings!</p><?php
	}

	foreach ( $suspect_post_text as $exploit_text ) {
		$posts = $wpdb->get_results( "SELECT * FROM {$wpdb->posts} WHERE post_type<>'revision' AND post_content LIKE '%{$exploit_text}%'" );
		if ( $posts )
			$suspect_posts[$exploit_text] = $posts;
		$comments = $wpdb->get_results( "SELECT * FROM {$wpdb->comments} WHERE comment_content LIKE '%{$exploit_text}%'" );
		if ( $comments )
			$suspect_comments[$exploit_text] = $comments;
	}
	unset($posts);
	unset($comments);

	if ( !empty( $suspect_posts ) ) { ?>
		<h3>Suspicious Posts and Comments</h3>
		<p>Some posts and comments on your blog contain suspicious text that may have been placed there by hackers.</p><ul><?php
		foreach ( $suspect_posts as $exploit => $posts ) {
			foreach ( $posts as $post ) {
				$edit_url = "<strong>Post:</strong> <a href='post.php?action=edit&amp;post=$post->ID' title='Edit this post'>$post->post_title</a>";
				$contents = $post->post_content;
				echo "<li>$edit_url<br /><blockquote style='border: 1px solid #333; background: #eee;'>";
				hilight_text( $contents, $exploit );
				echo "</blockquote></li>";
			}
		}
		foreach ( $suspect_comments as $exploit => $comments ) {
			foreach ( $comments as $comment ) {
				$edit_url = "<strong>Comment:</strong> <a href='comment.php?action=editcomment&amp;c=$comment->comment_ID' title='Edit this comment'>$comment->comment_author</a>";
				$contents = $comment->comment_content;
				echo "<li>$edit_url<br /><blockquote style='border: 1px solid #333; background: #eee;'>";
				hilight_text( $contents, $exploit );
				echo "</blockquote></li>";
			}
		}
		echo "</ul>";
	} else { ?>
		<h3>Suspicious Posts and Comments</h3>
		<p>Hooray! No suspicious text was found in any of your posts or comments!</p><?php
	}
	
	// List all administrators ?>
	<h3>Administrators</h3>
	<table class="widefat fixed" style="margin-bottom: 2em;">
		<thead>
			<tr>
				<th scope="col" style="width: 5%">ID</th>
				<th scope="col">Username</th>
				<th scope="col">Name</th>
				<th scope="col">Email</th>
			</tr>
		</thead>
		<tbody>
	<?php	
	
	$sort_users = 'user_nicename';
	$user_ids = $wpdb->get_col( $wpdb->prepare( "SELECT $wpdb->users.ID FROM $wpdb->users ORDER BY %s ASC", $sort_users ) );
	
	foreach ( $user_ids as $id ) {
		$user = get_userdata( $id );
		if ( $user->user_level == '10' ) {
			echo '<tr><td>' . $user->ID . '</td><td>' . $user->user_login . '</td><td>';
			if ( isset( $user->last_name ) && isset( $user->first_name ) ) {
				echo $user->first_name . ' ' . $user->last_name;
			}
			echo '</td><td>' . $user->user_email . '</td></tr>';
		}
	} ?>
		</tbody>
	</table>
	
<?php	
}
?>
